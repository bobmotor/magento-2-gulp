/**
 * Absolute Web Services Intellectual Property
 *
 * @category     {development/deployment}
 * @copyright    Copyright Â© 1999-2018 Absolute Web Services, Inc. (http://www.absolutewebservices.com)
 * @author       Absolute Web Services
 * @license      http://www.absolutewebservices.com/license-agreement/  Single domain license
 * @terms of use http://www.absolutewebservices.com/terms-of-use/
 */

const gulp = require('gulp');
const livereload = require('gulp-livereload');
const browserSync = require('browser-sync').create();

const args = require('../args');
const paths = require('../paths');
const loggers = require('../loggers');
const constants = require('../constants');
const matchTheme = require('../matchTheme');

module.exports = () => {
    if (!matchTheme.matchTheme) {
        loggers.matchTheme(args.themeName, matchTheme.avaliablePackages);
    } else if (
        !args.themeName ||
        args.themeName === constants.MAP_KEY ||
        args.themeName === constants.MIN_KEY ||
        args.themeName === constants.LIVE_KEY ||
        args.themeName === constants.BS_KEY
    ) {
        loggers.specifyTheme(matchTheme.avaliablePackages);
    } else {
        let task = 'Watching';

        loggers.task(task, Object.keys(paths.sources));

        for (let source in paths.sources) {
            if (args.liveArg >= 0) {
                livereload.listen();
            } else if (args.bsArg >= 0) {
                browserSync.init({
                    proxy: 'http://[hostname].loc/',
                    host: '[hostname].loc',
                    tunnel: '[hostname]',
                    open: false
                });

                browserSync
                    .watch(`${paths.sources[source].css}*.css`)
                    .on('change', browserSync.reload);
            }

            gulp.watch([`${paths.sources[source].watch}`], ['less']);
        }
    }
};
